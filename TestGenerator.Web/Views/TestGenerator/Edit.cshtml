@model TestGenerator.DAL.Models.Test

<h1>Edit Test</h1>

@using (Html.BeginForm("Edit", "TestGenerator"))
{
  @Html.AntiForgeryToken()

  @Html.HiddenFor(model => model.TestId)
  @Html.HiddenFor(model => model.IsCreatedManually)
  @Html.HiddenFor(model => model.IsAutoCreatedFromQuestions)
  @Html.HiddenFor(model => model.IsAutoCreatedByChatGpt)
  @Html.HiddenFor(model => model.Author)
  @Html.HiddenFor(model => model.AuthorId)

  <div class="form-floating mb-3">
    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", placeholder = "Name" } })
    @Html.LabelFor(model => model.Name, new { @class = "form-label" })
  </div>

  <div class="form-floating mb-3">
    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", placeholder = "Description" } })
    @Html.LabelFor(model => model.Description, new { @class = "form-label" })
  </div>

  <div class="form-floating mb-3">
    @Html.EditorFor(model => model.NumberOfQuestions, new { htmlAttributes = new { @class = "form-control", placeholder = "Number of Questions", @readonly = "readonly" } })
    @Html.LabelFor(model => model.NumberOfQuestions, new { @class = "form-label" })
  </div>

  <div class="form-floating mb-3">
    @Html.EditorFor(model => model.NumberOfAnswersPerQuestion, new { htmlAttributes = new { @class = "form-control", placeholder = "Number of Answers per Question", @readonly = "readonly" } })
    @Html.LabelFor(model => model.NumberOfAnswersPerQuestion, new { @class = "form-label" })
  </div>

  <div class="form-floating mb-3">
    @Html.EditorFor(model => model.CreatedAt, new { htmlAttributes = new { @class = "form-control", placeholder = "Created At", @readonly = "readonly" } })
    @Html.LabelFor(model => model.CreatedAt, new { @class = "form-label" })
  </div>

  <div class="form-floating mb-3">
    @Html.EditorFor(model => model.EditedAt, new { htmlAttributes = new { @class = "form-control", placeholder = "Edited At", @readonly = "readonly" } })
    @Html.LabelFor(model => model.EditedAt, new { @class = "form-label" })
  </div>

  <h3 class="mt-3 text-decoration-underline">Questions:</h3>

  @for (var i = 0; i < Model.NumberOfQuestions; i++)
  {
    @Html.HiddenFor(model => model.Questions[i].QuestionId)
    @Html.HiddenFor(model => model.AuthorId)

    <div class="row mb-3 mt-5">
      <label asp-for="@Model.Questions[i].QuestionText" class="col-sm-1 col-form-label fw-bold">Question @(i + 1)</label>
      <div class="col-sm-11">
        <input asp-for="@Model.Questions[i].QuestionText" class="form-control" value="@Model.Questions[i].QuestionText"/>
        <span asp-validation-for="@Model.Questions[i].QuestionText" class="text-danger"></span>
      </div>
    </div>

    @for (var j = 0; j < Model.Questions[i].Answers.Count; j++)
    {
      @Html.HiddenFor(model => model.Questions[i].Answers[j].AnswerId)

      var answerLabel = (char)(97 + j) + ")";

      <div class="row mb-3 align-middle">
        <label asp-for="@Model.Questions[i].Answers[j].AnswerText" class="col-sm-2 col-form-label text-end">@answerLabel</label>
        <div class="col-sm-10 d-flex align-items-center">
          <input asp-for="@Model.Questions[i].Answers[j].AnswerText" class="form-control" value="@Model.Questions[i].Answers[j].AnswerText"/>
          <span asp-validation-for="@Model.Questions[i].Answers[j].AnswerText" class="text-danger"></span>
          @{
            var isChecked = Model.Questions[i].Answers[j].IsCorrect;
          }
          <input asp-for="@Model.Questions[i].Answers[j].IsCorrect" type="checkbox" class="form-check-input ms-2" checked="@(isChecked)"/>
        </div>
      </div>
    }
  }

  <button type="submit" class="btn btn-primary">Save</button>
  <a class="btn btn-secondary" href="@Url.Action("Index")">Back to List</a>
}