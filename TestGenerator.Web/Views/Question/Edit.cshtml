@model TestGenerator.DAL.Models.Question

<h1>Edit Question</h1>

@using (Html.BeginForm("Edit", "Question"))
{
  @Html.AntiForgeryToken()

  <input type="hidden" asp-for="QuestionId"/>

  <div class="form-floating mb-3">
    @Html.EditorFor(model => model.CreatedAt, new { htmlAttributes = new { @class = "form-control", placeholder = "Created At", @readonly = "readonly" } })
    @Html.LabelFor(model => model.CreatedAt, new { @class = "form-label" })
  </div>

  <div class="form-floating mb-3">
    @Html.EditorFor(model => model.EditedAt, new { htmlAttributes = new { @class = "form-control", placeholder = "Edited At", @readonly = "readonly" } })
    @Html.LabelFor(model => model.EditedAt, new { @class = "form-label" })
  </div>

  <div class="row mb-3 mt-5">
    <label asp-for="@Model.QuestionText" class="col-sm-1 col-form-label fw-bold">Question </label>
    <div class="col-sm-11">
      <input asp-for="@Model.QuestionText" class="form-control" value="@Model.QuestionText"/>
      <span asp-validation-for="@Model.QuestionText" class="text-danger"></span>
    </div>
  </div>

  @for (var i = 0; i < Model.Answers.Count; i++)
  {
    @Html.HiddenFor(model => model.Answers[i].AnswerId)

    var answerLabel = (char)(97 + i) + ")";

    <div class="row mb-3 align-middle">
      <label asp-for="@Model.Answers[i].AnswerText" class="col-sm-2 col-form-label text-end">@answerLabel</label>
      <div class="col-sm-10 d-flex align-items-center">
        <input asp-for="@Model.Answers[i].AnswerText" class="form-control" value="@Model.Answers[i].AnswerText"/>
        <span asp-validation-for="@Model.Answers[i].AnswerText" class="text-danger"></span>
        @{
          var isChecked = Model.Answers[i].IsCorrect;
        }
        <input asp-for="@Model.Answers[i].IsCorrect" type="checkbox" class="form-check-input ms-2" checked="@(isChecked)"/>
      </div>
    </div>
  }

  <button type="submit" class="btn btn-primary">Save</button>
  <a class="btn btn-secondary" href="@Url.Action("Index")">Back to List</a>
}